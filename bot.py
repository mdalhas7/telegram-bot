import os
import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters
from openai import OpenAI

# Logging (‡¶°‡¶ø‡¶¨‡¶æ‡¶ó‡¶ø‡¶Ç ‡¶è‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø)
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# API Key ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶è‡¶®‡¶≠‡¶æ‡ßü‡¶∞‡¶®‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶®‡ßá‡¶ì‡ßü‡¶æ
TELEGRAM_TOKEN = os.environ['BOT_TOKEN']
OPENAI_API_KEY = os.environ['OPENAI_API_KEY']

# OpenAI Client ‡¶§‡ßà‡¶∞‡¶ø
client = OpenAI(api_key=OPENAI_API_KEY)

# /start ‡¶ï‡¶Æ‡¶æ‡¶®‡ßç‡¶° ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_name = update.effective_user.first_name
    await update.message.reply_text(f"üëã ‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã {user_name}! ‡¶Ü‡¶Æ‡¶ø ChatGPT ‡¶¨‡¶ü‡•§ ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶ú‡¶ø‡¶ú‡ßç‡¶û‡ßá‡¶∏ ‡¶ï‡¶∞‡ßã‡•§")

# ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡¶≤‡¶æ‡¶∞
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",  # ‡¶ö‡¶æ‡¶á‡¶≤‡ßá ‡¶è‡¶ñ‡¶æ‡¶®‡ßá gpt-4 ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã (‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá)
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": user_input}
            ]
        )
        bot_reply = response.choices[0].message.content
        await update.message.reply_text(bot_reply)

    except Exception as e:
        await update.message.reply_text("‚ùå ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶≠‡ßÅ‡¶≤ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§")
        logging.error(f"Error: {e}")

# ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶™ ‡¶∞‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ‡¶®‡ßã
if __name__ == '__main__':
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("‚úÖ Bot is running...")
    app.run_polling()
